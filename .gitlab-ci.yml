image: docker:stable

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  IMAGE_NAME: discord-rem
  IMAGE: $DOCKER_REGISTRY_URL/$IMAGE_NAME

stages:
  - build
  - deploy

build:
  stage: build
  before_script:
    - echo $PWD
    - apk update && apk add git
    - export VERSION_STR=$(git show -s --date=format:"%Y-%m-%d %H:%M:%S %z" --format="commit %h (%cd)" $CI_COMMIT_SHA)
  script:
    - echo "$VERSION_STR" > Rem/VERSION.txt
    - docker pull $IMAGE:latest || true
    - docker build --cache-from $IMAGE:latest -t $IMAGE:latest -t $IMAGE:$CI_COMMIT_REF_SLUG -t $IMAGE:$CI_COMMIT_SHA .
    - docker push $IMAGE:$CI_COMMIT_SHA
    - docker push $IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $IMAGE:latest

deploy_prod:
  image: alpine:latest
  stage: deploy
  variables:
    GIT_STRATEGY: none
  tags:
    - docker
    - linux
    - internal
  before_script:
    - apk update && apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER_HOST "cd $DOCKER_COMPOSE_PATH && docker-compose pull && docker-compose up -d"
  environment:
    name: production
  only:
    - master
